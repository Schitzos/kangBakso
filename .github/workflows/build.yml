name: Firebase App Distribution

on:
  pull_request:
    types:
      - closed # Triggers only when a PR is closed
    branches:
      - main # Ensures it runs only for PRs targeting the main branch

jobs:
  sonarcloud:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

  firebase_app_distribution:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # needs: sonarcloud

    env:
      GOOGLE_MAPS_API_KEY: ${{secrets.GOOGLE_MAPS_API_KEY}}
      WEB_CLIENT_ID: ${{secrets.WEB_CLIENT_ID}}
      BACKGROUND_TASK_TIMEOUT: ${{secrets.BACKGROUND_TASK_TIMEOUT}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0

      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Install dependencies
        run: npm install - force

      - name: Bundle the app
        run: npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res
        
      - name: Set Gradlew Permissions
        run: chmod +x android/gradlew

      - name: Running Tests
        run: npm test

      - name: Create Google Services JSON File
        env:
          GOOGLE_SERVICES_JSON: ${{secrets.GOOGLE_SERVICES_JSON}}
        run: echo $GOOGLE_SERVICES_JSON | base64 -di > ./android/app/google-services.json

      - name: Build application
        run: |
          cd ./android
          ./gradlew assembleDebug

      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Upload artifact to Firebase App Distribution
        id: testing_outputs
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: android/app/build/outputs/apk/debug/app-debug.apk
